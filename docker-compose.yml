version: '3'

services:
  rates:
    restart: on-failure
    container_name: ${APP_NAME}
    build: .
    ports:
      - ${GRPC_PORT}:${GRPC_PORT}
    env_file:
      - .env
    depends_on:
      - db_rates
    networks:
      - my_network

  db_rates:
    image: postgres
    restart: on-failure
    container_name: db_rates
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5433:5432"  
    networks:
      - my_network 

  migrator_rates:
    image: migrate/migrate
    volumes:
    - ./migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable",
      ]    
    command: ["up"]    
    depends_on:
        - db_rates
    restart: on-failure
    networks:
    - my_network    

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"    

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "4317:4317"
    networks:
    - my_network   

networks:
  my_network:
    external: true              